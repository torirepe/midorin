//break point
$breakpoints: (
  'sp': 'screen and (max-width: 425px)',
  'tb': 'screen and (min-width: 426px) and (max-width: 768px)',
  'pc': 'screen and (min-width: 769px)',
) !default;
@mixin mq($breakpoint: sp) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

//font
$f-sans: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Original Yu Gothic", "Yu Gothic", YuGothic, Verdana, Meiryo, "M+ 1p", sans-serif;
$f-serif: "Hiragino Mincho ProN", 游明朝, "Yu Mincho", YuMincho, HGS明朝E, メイリオ, Meiryo, serif;
$f-kiteone: 'Kite One', -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Original Yu Gothic", "Yu Gothic", YuGothic, Verdana, Meiryo, "M+ 1p", sans-serif;
$f-open: 'Open Sans', -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Original Yu Gothic", "Yu Gothic", YuGothic, Verdana, Meiryo, "M+ 1p", sans-serif;

//color
$c-white: #fff;
$c-black: #000;
$c-grey: #ddd;
$c-lightgrey: #f8f8f8;
$c-darkgrey: #909090;

//hover
%imgHover {
  @include mq(pc) {
    transition: all .12s ease;
    img {
      transition: all .12s ease;
    }
    &:hover {
      //background-color: $c-lightgrey;
      img {
        filter: brightness(110%) grayscale(80%);
      }
    }
  }
}

//active
$a-box: 0 0 2px rgba(0,0,0,.4) !important;
$a-text: 0 0 2px rgba(0,0,0,.2) !important;
$a-trans: all .06s ease !important;

//control
.sp {
	display: none;
	@include mq(sp) {
		display: block !important;
	}
}
.tb {
	display: none;
	@include mq(tb) {
		display: block !important;
	}
}
.pc {
	display: none;
	@include mq(pc) {
		display: block !important;
	}
}
.cf {
	zoom: 1;
	&:after {
		display: block;
		content: "";
		clear: both;
	}
}

//tool
/*@mixin fzvw($px) {
  font-size: $px * 1.4 / 750 * 100 + vw;
}*/
@mixin fz($px) {
	@include mq(sp) {
		font-size: $px * 1.4 / 750 * 100 + vw;
	}
	@include mq(tb) {
		font-size: $px + px;
	}
	@include mq(pc) {
		font-size: $px + px;
	}
}
